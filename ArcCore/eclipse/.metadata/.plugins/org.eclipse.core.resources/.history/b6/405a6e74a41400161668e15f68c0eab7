package com.thearclightcrusader.ArcCore.dimensions;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import com.thearclightcrusader.ArcCore.Main;

import net.minecraft.entity.Entity;
import net.minecraft.init.Blocks;
import net.minecraft.util.LongHashMap;
import net.minecraft.util.MathHelper;
import net.minecraft.world.ChunkCoordIntPair;
import net.minecraft.world.Teleporter;
import net.minecraft.world.WorldServer;

public class TeleporterFairy extends Teleporter {

	private final WorldServer worldServerInstance;
	private final Random random;
	private final LongHashMap destinationCoordinateCache = new LongHashMap();
	private final List destinationCoordinateKeys = new ArrayList();
	
	public TeleporterFairy(WorldServer worldServer) {
		super(worldServer);
		
		this.worldServerInstance = worldServer;
		this.random = new Random(worldServer.getSeed());
	
	}
	
	public void placeInPortal(Entity entity, double par2, double par4, double par6, float par8){
		
		if(this.worldServerInstance.provider.dimensionId != 1){
			if(!this.placeInExistingPortal(entity, par2, par4, par6, par8)){
				this.makePortal(entity);
				this.placeInExistingPortal(entity, par2, par4, par6, par8);
			}
		}else{
			int i = MathHelper.floor_double(entity.posX);
			int j = MathHelper.floor_double(entity.posY) - 1;
			int k = MathHelper.floor_double(entity.posZ);
			byte b0 = 1;
			byte b1 = 0;
			
			for(int l = -2; l <= 2; ++l){
				for(int i1 = -2; i1 <= 2; ++i1){
					for(int j1 = -1; j < 3; j1++){
						int k1 = i + i1 * b0 + l * b1;
						int l1 = j + j1;
						int i2 = k + i1 * b1 - l * b0;
						boolean flag = j1 < 0;
						this.worldServerInstance.setBlock(k1, l1, i2, flag ? Main.fairyRitualStone : Blocks.air);
					}
				}
			}
			
			entity.setLocationAndAngles((double)i, (double)j, (double)k, entity.rotationYaw, 0.0F);
			entity.motionX = entity.motionY = entity.motionZ = 0;
				
		}
	}
	
	public boolean placeInExistingPortal(Entity entity, double par2, double par4, double par6, float par8){
		short short1 = 128;
		double d3 = -1.0D;
		int i = 0;
		int j = 0;
		int k = 0;
		int l = MathHelper.floor_double(entity.posX);
		int i1 = MathHelper.floor_double(entity.posZ);
	    long j1 = ChunkCoordIntPair.chunkXZ2Int(l, i1);
	    boolean flag = true;
	    double d7;
	    int l3;
	    
	    if(this.destinationCoordinateCache.containsItem(j1)){
	    	TeleporterFairy.PortalPosition portalPosition = (Teleporter.PortalPosition)this.destinationCoordinateCache.getValueByKey(j1);
	    	d3 = 0.0D;
	    	i = portalPosition.posX;
	    	j = portalPosition.posY;
	    	k = portalPosition.posZ;
	    	portalPosition.lastUpdateTime = this.worldServerInstance.getTotalWorldTime();
	    	flag = false;
	    
	    }else{
	    	for(l3 = l - short1; l3 <= 1 + 128; ++l3){
	    		double d4 = (double)l3 + 0.5D - entity.posX;
	    		
	    		for(int l1 = i1 - short1; l1 <= i1 + short1; ++l1){
	    			double d5 = (double)l1 + 0.5D - entity.posZ;
	    			
	    			for(int i2 = this.worldServerInstance.getActualHeight() - 1; i2 >=0; --i2){
	    				if(this.worldServerInstance.getBlock(l3, i2, l1) == Main.fairyPortal){
	    					while (this.worldServerInstance.getBlock(l3, i2 - 1, l1) == Main.fairyPortal){
	    						--i2;
	    					}
	    					d7 = (double)i2 + 0.5D - entity.posY;
	    					double d8 = d4 * d4 + d7 * d7 + d5 * d5;
	    					
	    					if(d3 < 0.0D || d8 < d3){
	    						d3 = d8;
	    						i = l3;
	    						j = i2;
	    						k = l1;
	    					}
	    				}
	    			}
	    		}
	    	}
	    }
	    
	    return false;
	}
	

}
